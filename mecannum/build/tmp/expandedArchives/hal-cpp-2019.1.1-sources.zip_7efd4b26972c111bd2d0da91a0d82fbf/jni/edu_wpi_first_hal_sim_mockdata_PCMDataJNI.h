/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class edu_wpi_first_hal_sim_mockdata_PCMDataJNI */

#ifndef _Included_edu_wpi_first_hal_sim_mockdata_PCMDataJNI
#define _Included_edu_wpi_first_hal_sim_mockdata_PCMDataJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerSolenoidInitializedCallback
 * Signature: (IILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerSolenoidInitializedCallback
  (JNIEnv *, jclass, jint, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    cancelSolenoidInitializedCallback
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_cancelSolenoidInitializedCallback
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    getSolenoidInitialized
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_getSolenoidInitialized
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    setSolenoidInitialized
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_setSolenoidInitialized
  (JNIEnv *, jclass, jint, jint, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerSolenoidOutputCallback
 * Signature: (IILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerSolenoidOutputCallback
  (JNIEnv *, jclass, jint, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    cancelSolenoidOutputCallback
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_cancelSolenoidOutputCallback
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    getSolenoidOutput
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_getSolenoidOutput
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    setSolenoidOutput
 * Signature: (IIZ)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_setSolenoidOutput
  (JNIEnv *, jclass, jint, jint, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerCompressorInitializedCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerCompressorInitializedCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    cancelCompressorInitializedCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_cancelCompressorInitializedCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    getCompressorInitialized
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_getCompressorInitialized
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    setCompressorInitialized
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_setCompressorInitialized
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerCompressorOnCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerCompressorOnCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    cancelCompressorOnCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_cancelCompressorOnCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    getCompressorOn
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_getCompressorOn
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    setCompressorOn
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_setCompressorOn
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerClosedLoopEnabledCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerClosedLoopEnabledCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    cancelClosedLoopEnabledCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_cancelClosedLoopEnabledCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    getClosedLoopEnabled
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_getClosedLoopEnabled
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    setClosedLoopEnabled
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_setClosedLoopEnabled
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerPressureSwitchCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerPressureSwitchCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    cancelPressureSwitchCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_cancelPressureSwitchCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    getPressureSwitch
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_getPressureSwitch
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    setPressureSwitch
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_setPressureSwitch
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerCompressorCurrentCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerCompressorCurrentCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    cancelCompressorCurrentCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_cancelCompressorCurrentCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    getCompressorCurrent
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_getCompressorCurrent
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    setCompressorCurrent
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_setCompressorCurrent
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerAllNonSolenoidCallbacks
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerAllNonSolenoidCallbacks
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    registerAllSolenoidCallbacks
 * Signature: (IILedu/wpi/first/hal/sim/NotifyCallback;Z)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_registerAllSolenoidCallbacks
  (JNIEnv *, jclass, jint, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_PCMDataJNI
 * Method:    resetData
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_PCMDataJNI_resetData
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
