/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI */

#ifndef _Included_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
#define _Included_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    registerActiveCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_registerActiveCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    cancelActiveCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_cancelActiveCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    getActive
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_getActive
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    setActive
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_setActive
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    registerRangeCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_registerRangeCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    cancelRangeCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_cancelRangeCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    getRange
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_getRange
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    setRange
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_setRange
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    registerXCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_registerXCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    cancelXCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_cancelXCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    getX
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_getX
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    setX
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_setX
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    registerYCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_registerYCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    cancelYCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_cancelYCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    getY
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_getY
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    setY
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_setY
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    registerZCallback
 * Signature: (ILedu/wpi/first/hal/sim/NotifyCallback;Z)I
 */
JNIEXPORT jint JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_registerZCallback
  (JNIEnv *, jclass, jint, jobject, jboolean);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    cancelZCallback
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_cancelZCallback
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    getZ
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_getZ
  (JNIEnv *, jclass, jint);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    setZ
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_setZ
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI
 * Method:    resetData
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_edu_wpi_first_hal_sim_mockdata_SPIAccelerometerDataJNI_resetData
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
